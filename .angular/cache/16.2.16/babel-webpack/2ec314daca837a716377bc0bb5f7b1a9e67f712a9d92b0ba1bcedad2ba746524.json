{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/auth';\n  }\n  login(credenciais) {\n    return this.http.post(`${this.apiUrl}/login`, credenciais);\n  }\n  registrar(usuario) {\n    return this.http.post(`${this.apiUrl}/registrar`, usuario);\n  }\n  resetSenha(email) {\n    return this.http.post(`${this.apiUrl}/reset-senha`, {\n      email\n    });\n  }\n  estaAutenticado() {\n    return !!localStorage.getItem('token');\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","login","credenciais","post","registrar","usuario","resetSenha","email","estaAutenticado","localStorage","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Users\\pedro.pereira\\Downloads\\Meu-Lembrete\\Meu-Lembrete\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface Credenciais {\r\n  email: string;\r\n  senha: string;\r\n}\r\n\r\ninterface Usuario {\r\n  nome: string;\r\n  email: string;\r\n  senha: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'http://localhost:3000/auth';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credenciais: Credenciais): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/login`, credenciais);\r\n  }\r\n\r\n  registrar(usuario: Usuario): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/registrar`, usuario);\r\n  }\r\n\r\n  resetSenha(email: string): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/reset-senha`, { email });\r\n  }\r\n\r\n  estaAutenticado(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}"],"mappings":";;AAkBA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4BAA4B;EAEL;EAExCC,KAAKA,CAACC,WAAwB;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,WAAW,CAAC;EAC5D;EAEAE,SAASA,CAACC,OAAgB;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,YAAY,EAAEK,OAAO,CAAC;EAC5D;EAEAC,UAAUA,CAACC,KAAa;IACtB,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,cAAc,EAAE;MAAEO;IAAK,CAAE,CAAC;EAChE;EAEAC,eAAeA,CAAA;IACb,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;;;uBAnBWb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}