{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nexport class ResetSenhaComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.resetForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  onSubmit() {\n    if (this.resetForm.valid) {\n      this.authService.resetSenha(this.resetForm.value.email).subscribe({\n        next: () => {\n          alert('Link de redefinição enviado para seu email!');\n        },\n        error: error => {\n          console.error('Erro ao enviar link:', error);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function ResetSenhaComponent_Factory(t) {\n      return new (t || ResetSenhaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetSenhaComponent,\n      selectors: [[\"app-reset-senha\"]],\n      decls: 16,\n      vars: 2,\n      consts: [[1, \"reset-container\"], [1, \"reset-card\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-button\", \"\", \"routerLink\", \"/login\"]],\n      template: function ResetSenhaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n          i0.ɵɵtext(4, \"Redefinir Senha\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetSenhaComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"mat-form-field\", 3)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 5);\n          i0.ɵɵtext(12, \" Enviar Link de Redefini\\u00E7\\u00E3o \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"mat-card-actions\")(14, \"a\", 6);\n          i0.ɵɵtext(15, \"Voltar para Login\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.resetForm.invalid);\n        }\n      },\n      dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.MatCard, i4.MatCardActions, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle, i5.MatAnchor, i5.MatButton, i6.MatInput, i7.MatFormField, i7.MatLabel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ResetSenhaComponent","constructor","fb","authService","resetForm","group","email","required","onSubmit","valid","resetSenha","value","subscribe","next","alert","error","console","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","selectors","decls","vars","consts","template","ResetSenhaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ResetSenhaComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["D:\\Users\\pedro.pereira\\Downloads\\Meu-Lembrete\\Meu-Lembrete\\src\\app\\pages\\reset-senha\\reset-senha.component.ts","D:\\Users\\pedro.pereira\\Downloads\\Meu-Lembrete\\Meu-Lembrete\\src\\app\\pages\\reset-senha\\reset-senha.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-senha',\r\n  templateUrl: './reset-senha.component.html',\r\n  styleUrls: ['./reset-senha.component.scss']\r\n})\r\nexport class ResetSenhaComponent {\r\n  resetForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.resetForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.resetForm.valid) {\r\n      this.authService.resetSenha(this.resetForm.value.email).subscribe({\r\n        next: () => {\r\n          alert('Link de redefinição enviado para seu email!');\r\n        },\r\n        error: (error) => {\r\n          console.error('Erro ao enviar link:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}","<div class=\"reset-container\">\r\n  <mat-card class=\"reset-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Redefinir Senha</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" type=\"email\" required>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"resetForm.invalid\">\r\n          Enviar Link de Redefinição\r\n        </button>\r\n      </form>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n      <a mat-button routerLink=\"/login\">Voltar para Login</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;AAQnE,OAAM,MAAOC,mBAAmB;EAG9BC,YACUC,EAAe,EACfC,WAAwB;IADxB,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IAEnB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC;KACpD,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACxB,IAAI,CAACN,WAAW,CAACO,UAAU,CAAC,IAAI,CAACN,SAAS,CAACO,KAAK,CAACL,KAAK,CAAC,CAACM,SAAS,CAAC;QAChEC,IAAI,EAAEA,CAAA,KAAK;UACTC,KAAK,CAAC,6CAA6C,CAAC;QACtD,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;OACD,CAAC;;EAEN;;;uBAvBWf,mBAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnBtB,mBAAmB;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCThCZ,EAAA,CAAAc,cAAA,aAA6B;UAGPd,EAAA,CAAAe,MAAA,sBAAe;UAAAf,EAAA,CAAAgB,YAAA,EAAiB;UAGlDhB,EAAA,CAAAc,cAAA,uBAAkB;UACcd,EAAA,CAAAiB,UAAA,sBAAAC,sDAAA;YAAA,OAAYL,GAAA,CAAAtB,QAAA,EAAU;UAAA,EAAC;UACnDS,EAAA,CAAAc,cAAA,wBAAqC;UACxBd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAY;UAC5BhB,EAAA,CAAAmB,SAAA,gBAA8D;UAChEnB,EAAA,CAAAgB,YAAA,EAAiB;UAEjBhB,EAAA,CAAAc,cAAA,iBAAuF;UACrFd,EAAA,CAAAe,MAAA,8CACF;UAAAf,EAAA,CAAAgB,YAAA,EAAS;UAIbhB,EAAA,CAAAc,cAAA,wBAAkB;UACkBd,EAAA,CAAAe,MAAA,yBAAiB;UAAAf,EAAA,CAAAgB,YAAA,EAAI;;;UAbjDhB,EAAA,CAAAoB,SAAA,GAAuB;UAAvBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAA1B,SAAA,CAAuB;UAM6Ba,EAAA,CAAAoB,SAAA,GAA8B;UAA9BpB,EAAA,CAAAqB,UAAA,aAAAR,GAAA,CAAA1B,SAAA,CAAAmC,OAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}